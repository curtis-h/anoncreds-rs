/// <reference types="cypress" />

// Welcome to Cypress!
//
// This spec file contains a variety of sample tests
// for a todo list app that are designed to demonstrate
// the power of writing tests in Cypress.
//
// To learn more about how Cypress works and
// what makes it such an awesome testing tool,
// please read our getting started guide:
// https://on.cypress.io/introduction-to-cypress

describe('example', () => {
  let wasm;

  const schema = {
    "name": "schema name",
    "version": "1.0",
    "attrNames": ["name", "age"],
    "issuerId": "did:web:xyz"
  };

  const credOffer = {
    schema_id: "did:web:xyz/resource/schema", 
    cred_def_id: "did:web:xyz/resource/cred-def", 
    key_correctness_proof: { 
      c: "80577772860416223263422695152905886672316359218241261035066286288747012050452", 
      xz_cap: "86399184305014951803044904413083872719834512637102025490402464358962490183019884628571659734090194170153757309875592746403906480357950259829494160027333567699222614310598171348329548285147875347358376861825808802209338695727121997040553920028731665466157981900220633960274767196735769963872212400649683226965197827068030344032811584552620508081330976523597462812917869184266615943682379668289316842142012936996566237438451098998241558131866684939147491341248956128047385157757548977220225944833863003865029509326171411551249634153852324905696711571739702306350703195540059483497395485381497382204833207235294244101136570145938131644464960886540509923975203230383331771076575743786878048332990", 
      xr_cap: [
        ["age", "13762589082984044640153043909995191975198753215844083631490436641918118220594028323486678903533773117408031994507280881245030555481217832840108214026788448969623579415650575862021128705141458647902216734656343851493177032181191674297632575402007055787053347254694137519521736036554595264683907086895349308231467605566687588432720956032871396331844291634660195948014600584916374283210623065122756812780165422109219141145346627347979848120247065324934935506267692092220038206749590565250699983728417428183020910558762743833183431601217592649414097000224030865417706703780073652873414713441672962852564160353557418080113779654878403220699238053373953073343575049731792381468596630078474114110073"], 
        ["name", "88165105626186530336801129217098396067603169050807282037952825465314190729495271615701113490195342474571068812288947614503804834460864227142828674953946432192332408154310383188524481412679242009250352994352625962310306595091388423745296378487998506563040711229890115894113236101668789151455675538090233238739955099623603814201864882991001597629214918929958109701660070059106852174643678597491784438957911592786147278920812575527881792589507190764367280867004097169522181289592518469876204889625739272678341204387208922461916374405277170939870334943161718488735834225301414935219738155641989435583597850005069681969822304633626231655129872855807999112806626987849781968237580526731439935449605"], 
        ["master_secret", "39137024930622557381761110675361931982570795707532274128146212259879340003973052739167847734788687400341927795264824793039416360223028901358806382631737238638060626691971157841984928523032173590883895133445681859741346685180667851165269883274296583485476022936359764133717651514145741896994193823929275761339292086576030317278169005742166423383507668247850292804649286422635616467718080692039327389062032868859552704296535528948299764307673709218512395205415283688826244364325692275777443929424487996208397818946626234800700341971403237133316519800306699729354820415174205906955469403549044961038483686180133516787022222577715192943698357858155050294162558990850886120944446145039909005232767"]
      ] 
    }, 
    nonce: "12895467132069267726730", 
    // method_name: None 
  };

  const credDef = {
    "schemaId": "did:web:xyz/resource/schema",
    "type": "CL",
    "tag": "default-tag",
    value: { 
      primary: {
         n: "4894808983192307253909314340536649245540682885095411470412094684494241230694938576918667486369462706644337356808919467442140258434898635651225266406617160060961622794995989426760262689709153660535880855287703814266618610414459895509372068264617686629319212532392992633654240401585528593077253399975427536084777768213541543011398545788926725245049098361746206199346810010290521325319404213213929190242417272745883014926393708771748763397170685864904105881722983977631079340249590633854825630088237176096651611693782343369338230713150934458232048473270003915174350245140752457348282320885856449875188363441370922887037", 
         s: "1033407402222558992735499098793616100140313326760040447129840793499797942783897770458838738892163890424231263843133659198965826021490669339370150350071201942989357524304192503190862558900556518567111339247321192592500479338047459367475169780642655112365924566532236245036742021828988471488835577067805103127344398409229528843273255424016534311595811152253156979338363597983415897962767868893750915317699274260822308587593935406466369412378236730496336680086271903552621740130835354030393457087364814180101332070223412733301478409230080287786134559275357863380406946502444911753060852660781836655524230892376142641986", 
         r: {
          "name": "4456692263189502789014737997997837414601722007715967364563388806841854613145611912695716708674631908635742709425994815741897506616902184046804657798194683541863235710886003907599963261243421116257357115457096378631319049398087779215862441586539652944845093307964218420664183759907313914470455907863323281327710725377322093871493066669583610452579856048564414221615483179283771904239368826284257342628230860214447365878092829410654391582495312399654142085851904290032376543932996333463444540888110840628451562711090816371091699298908461252148699256607906633656574521428112102624627222719188392990724088921086458983414", 
          "master_secret": "4853672461989574357949803087470858844191016822540767845092130148060416812718486921270074608355011316989641778874723351024966985269093632725915520480223543889033567744818206287521634723124744277425557876166777314636000738033928903817170651789894118069161778025756212515369102162249939191571580339476543288519146873402796278332345389415448902856413999700817815241694206768643180186425576201844899911900479686457834390035047070070188317243321053360975102428407862101231821518080954729021809558650357530531360224025046741247467391771373990060430158359448691969474615524757618638224085659515805411706744199437524829915592", 
          "age": "1141458344133934778168159619924664763720526616699155243369880403103583462791199454299670692360894694318012395406430667101258713869819846546613762200054459274851260397391148496308189802581835212726955134277661006847766421545660685819529132402439323759310468424496386208292737192274732916168348642414574199693359799255997246775932165286584141766964794909000636242145412002338052856023345822122556756740925289565516751886838794119515969731564805729186138838977895471668768914728024811405428748092054321561468385581583751150862151422030889382682867346163018690651949332692403520361813898001695393084206901240437559273191"
        }, 
        rctxt: "1453404883372490300724685428216847117875385347606655309550084011494580439231442341748809237314639098979660510560818653624153254988773179927275688196944855913829150942288010522123834055592278564452833495298382198025664408493918726118341979567012002027754748091883821633011028491918470310075471252073638018379916874573515502376869317098619581831484774508035564539331841589111867332763426533877709365785137014929925329908725982385822738006764686678659802565064956550133190219418433559215290850916818875911182324227160138716127369673265797393393914191025261438994093859124622149636174756587809001523528012909037424920303", 
        z: "3982625370996156286018706098848100766203494345855514309145709050496708887584195123065711138481386882765033531487945137983867046276998332320536424332341758370468318762922595766322908498071828677292251766716703470923881750793531861397315574177605133421324621058096613146577591359564321813610720496695254556328180116192038387100147773002525029817012081841290544249092087670014566783542904844006495974682484990500299858505627296292950296440232789425401844254522274990107195490654639540346265783833222707159503201485876653185083283540025928353567122607813959125845844237128064047823233184423476160243509979288423633119113"
      },
      // revocation: None 
    },
    "issuerId": "did:web:xyz"
  };

  const credDefPriv = {
    value: { 
      p_key: { 
        p: "39719902610622625735739192266000583528076874974771979078685866428981023473548113343986592665627862573998055065297118528609467793077553425784850780091218488622780301050197638143026677132688126341186596148981677636682181666077918399062248855785730355160958184202646477696578199106148655797812939959571794985319", 
        q: "30808289179208910949549225018748579070729648580545033186707810875344689801920450021198171257154504663607734711106756967658395105282645474714373784898343914190918344054766461082094120924177134976174459174001068467405906762877389274462409110900054191050640430221044594834117262084211044219139708674498075458041"
      }, 
      // r_key: None 
    }
  };

  const linkSecret = "91993318581943239787710545985430259578940863873840022280074112605544397756609";

  const credRequest = {
    entropy: "entropy",
    // prover_did: None, 
    cred_def_id: "did:web:xyz/resource/cred-def",
    blinded_ms: {
      u: "2436871805576429843159681457345754667831495002616688378630966261479851183566214831460979128742956284002728392275693544454186471174623185946701498554538622551969019560812740882517238592126011994665043501042848228256910408002045543620006832351991153090194773684046246729125109973414042720994268876361777696688756493694560223415085069915213048501338293143743356235919973936982782851289531549008363234927306647323242230148218124864127780875790540791287092521151618924546330169701378984396952914457471732898343458503733081094543360221465320270714846412711962584165726158628365852369222164895978783099397758376620923138142", 
      // ur: None, 
      hidden_attributes: ["master_secret"],
      committed_attributes: {} 
    }, 
    blinded_ms_correctness_proof: { 
      c: "26727730325220694657582817145973816485003104175415784645646559992093894703477", 
      v_dash_cap: "911443251297197646309591759621787036996698637902972316389499888054326574998031098641002326642516802662477774167917098182767229619920532615523650350785303334711477280804905874764508231263650850115939560409272553503630726103522976219143782944434778218974726291477702744429438526010181262834581424780752396098280613529566156278513804524473988859393143357686416724035781812414064682352515813896207095175023531632220502762573379519117765264556529055086131017684630530740941097047742364884891785907664629226587417752756326584812311886206515050193150551117989486688457092861087996267697117659254441649119162538575585725679155421332832099445258455256608562215246086431971047634602155990208600711614014092800132545011232206532",
      m_caps: {"master_secret": "25503500827943187371098504123709714937576209684357822430957188969691533750330808042858262592915040770768420909109415540986068293310060705758015174844497372969265861317844678808038"},
      r_caps: {} 
    }, 
    nonce: "694925868276918646054153"
  };
  
  const credRequestMeta = {
    link_secret_blinding_data: { 
      v_prime: "34101034401605955675142403452104770698787566087651725384575183949488031475834202975745001469020670548120570292291433161404452558227569979852458770374145727504511800036637828314456108958799912373473295049583493376636253192268723365913877814090767015187516303885944312503145236911022106845674146798892062595064628466059934468435475011567537569586140163528792175231729101695153846707149108304845406272914316426960739121798428897129942164882007775441904587826590647881953167471534330527166559246709169726013345476609654792418636327854760785214254394878821065140208446302111451916139402461101099174813159026768480857039316965465262529529562859708", 
      // vr_prime: None 
    },
    nonce: "694925868276918646054153",
    link_secret_name: "my-secret-id"
  };

  const credential = {
    schema_id: "did:web:xyz/resource/schema",
    cred_def_id: "did:web:xyz/resource/cred-def",
    // rev_reg_id: None, 
    values: [
      ["age", { raw: "28", encoded: "28" }], 
      ["name", { raw: "john", encoded: "68231017646261521938414776289104528029572365316885701689085572319872983785594" }]
    ], 
    signature: { 
      p_credential: { 
        m_2: "44464127759225804519154260573419200504082381909738430963545801214806379436064", 
        a: "4537093391274769048096905159867126949796909025225705224288954426921640171597704111462819825617374294108404940914249093987521800994422747620422237663353318349538212446299317549769860217938061892913286650903703191184650468358753495384259696015863082143942130772453625379145160833167625443727300379461113840992040673390152473109881787323947549593943193422187939170423266230278853266010138491464195728326470785577942674918868687554820469863575976976842158342515770141736893925669434969474230626897791544468183409975721336631836607332492090712899267952140246958856618288956346080173935900268326283043910354065577411320896", 
        e: "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742929986006193869737621598678085866827301", 
        v: "9259439468257080624702657279317076457784371346197579350398676902451470102901305135163779143395478781488036554400159214422602284838947178836568958872839093728310470237336423201753170881188949011971246634807284985960512457975072488345097240843795412599039645126829814652430311761529220871006204494970762650009007357965031195398576261929291211465378072523743172274028104055480002684830645264592927956253693601224667189419286367838489675614266379084995825960438015604703287451802463025157131219113523264602741907957555134204992240614133777399824953738569444150873673866695904092665521917028475360321444290066521380644310208228136998456229515335950223378498342441478007066967057797006052608363058916415738209454728029472820767157010892676064998497283258253989213347359055530545535915626346987134455308526307998704009879280191" 
      }, 
      // r_credential: None
    }, 
    signature_correctness_proof: { 
      se: "458197117500805803113092667913428302739803190185140352164656096414394114260974240312605498033333230577574855178094418623817675929226156550219299725765047122236285990829595873752648028995868809797487431911394109873926745812946936281018995735115057546374253192634973048574386543206990701654517370092636041001997823858039503257362688554915616100036978001284928087927691285908506045055799764944276914237939333808694823754060184338188432545205806931317878854327970145987857326463785125668610034885767913620646353914158897289360719952836067583720159385447153839016913970434799054088445343924844006850592504185359038118972", 
      c: "103527574142031093658342914946489223141816611848327315663987950136315136076360" 
    }, 
    // rev_reg: None, 
    // witness: None 
  };

  const presentation = {
    proof: {
      proofs: [
        { 
          primary_proof: { 
            eq_proof: { 
              revealed_attrs: {
                "name": "68231017646261521938414776289104528029572365316885701689085572319872983785594"
              }, 
              a_prime: "100594009801506325720357163653972238186761545011627111951710879762686967248297359643161787447079529172661916174701214361559770572960148765121251903606841766528114775909018413667265827125601004767133375609024005996659627099219338749619132461317191859548494305691140219985116996756570485961710625876251463599280615408342147790198993942247331677794485313814997636043651965273014117515001554438993608152252554608245322985789676338371522596340237767021139319448222292978508126496722050121996189371588397285326426166630997263492340673048835471023299639727151183384330867914803054032272862871494620530214791002545706436599527", 
              e: "43190998147608528451704312807012433161004855591040053704390067121946043647721216878716517625310424310131398101237570475251041623400617908", 
              v: "1136510916060582568870112867150441592250101753484132888582963468459815776523067437141891583309439970391625276739593239163975866647829673792896174404611586410088385298213245503005780310490429508534325066896875850525934796469008217644511682804528819909571878846515403783209005987263786182018499653397688725685079523209620546088617095681363091301360184597448837152257275428596198978081760689138237163625692178481954511465672679099027767425236153294807483641531305885025191159577220322968227523084911103113912687612470292139528692618228282717397662110973573729557776186072293754702848139196388903438393080715135465691106458915980311356265499897362268500934089592556480238044041739796615240157312424182201275455484156555921642836977477620229800405616299410034137224421832584636547226749525913279807173389013267468720016591518701261829297782372144010725404223388684366696695786488817684486154885316983422604509919984641800921108", 
              m: {
                "master_secret": "4296212197783377167908143334231840819723170632407698646265593617598682367680263594113719307144064745285462408563979210860682399575678474960517339149879631053034392777348628135879", 
                "age": "12000625427809037141304252246744665076131983876157587433129225615756755854342092132126063588812739465536528805303429057971947496870474463062525425957145832925995502686093919819422"
              }, 
              m2: "7939281840467814985691965296539446238179227920807919222752363997714100339582028521580389860151912546651255421601886286773544082139387094519706376602271744431052729537242118759858" 
            }, 
            ne_proofs: [
              { 
                u: {
                  "0": "8975489706628581877947898843455677225540894075526347409508951143497879127858008301807244916197916783763546276140288403876811950098156833117521886942254421176148824067186648329812", 
                  "1": "5317130769284648838641146327470779526023031816946064150508937573693150391353040781120321940065477221442966091912809665341348923801007327487858305091490300386173620735587006152807", 
                  "2": "5117416540597660102315577007902433998262677329237838342978453792178928193033075963596513155883606072107205472631594892240954252797737742643755457177837997915638543849784197642535", 
                  "3": "3163028416127418069258773953645047028550290835893952221735357431071425894169661720270218964902782790798333064091782636197767126884220082457020238241697856675431696100132586565887"
                }, 
                r: {
                  "1": "2379660113681893774560042100509005793561919162902216503686084376371817339398194001801909843847814800181976047865548906939064913553612993267179306435239288656082711481664169567627635140837209539043428670883557200545139029875569321459319643850109344174907884830248526144453751945143370659343551709924709153553264010732766339943794473780320158737464103925139394029026264301965292457575952281229901330866115226378535552482837032709529451698159704585346248555335198766497088945027677849608128795548562079759844964684900781677766294286928284421185888436708891040022317750343531187597828496032435513455749399456148381383143078434581142458103825677395428326348932278792300509333773035207529521431030620893360257137706912904744", 
                  "0": "1169656210968524122566384069285468108366246884831284792798151028045113610096253059774649343639556392053763230122960955994350970632195251312256407219762388616891663114501246172997544307073024403473293488172220923246758111062507291206901918752869564538590225305638715014659430053891343114986118766258598736640532804429240610317173564039737703807215068819361586175492231875242253728293976653552087485421320763438974294590952118305880222617084438126800012022430148451114839527011679905957566702966716655151530952544337281162821574802001681287988308310640560888344200179634538724166689660544503929391382611051600688029827790024190947285008012701237357195054253223703221633452199616093841726840634730057769295446154184688307", 
                  "2": "161925530200334051111818004367931196006454709164746141158611643333411131170453094897076961491699651417494887607327117824220104252394847150044668476918216060171543418611826294621192580388441287068122588305206307812268971816822583561968678760652592819434217200950477632543163248256253203824195139968117890842218762946236878460888334536605095517676344147818747807956133427047736731260494332738197246746182305384871985021068789279310045245662206428010595300269330392458688849234366602528367686305572384213399930181011636334788898796134138345871075968663579371718900230907010492912261590807740973378562155318387758139046028385865785104524274937710219498660971256978719729776308356970720690959638239041264686629609612680766", 
                  "3": "1149602712619914604227922492521840450579704622284229731568897418617767706096543976530196179952364030091957777698499976957940477261277200219890530964072625394772599057792652413435796145818267646715336398655025219937091895883481536571761959667649871453436175783982098481878435732186191539002714797243696152290424609715209763125318530534159689982214146390366558331834929072836581200949148387501780415199481986950628833245203918992458308853244426042916868783409328232049417561335828379386726224715007180754159960287792486392901539000167026713715671896193048495243463421946311070886132245838183664769696484405938106265193974413598332057830119220195711129993500089120020691683413372621299304877679403801214422907944902129752", 
                  "DELTA": "2769604227477089485775350535917361029968146827046666717396667992447583025624449108149868851087019383686029423912787517290028903755822994503568007580907906223433573402647197489431444129101974912064505774134253457349168189204992402814834166737262183482204574496044864300126790034395609139493139893996939063978780024502249805355573219000314808807537128921795643838498802215166729974216705286288378558793343756936209422693601705064398355544102968133182186851649323361486662109585307174413666037099754436325208670782897930124741465590338039306487472363383699469191671507165855318574161276316975444525546531816139194489822565048605949820659826474843509496946300668956809555493737418482943100236046602622174055639382286066986"
                }, 
                mj: "12000625427809037141304252246744665076131983876157587433129225615756755854342092132126063588812739465536528805303429057971947496870474463062525425957145832925995502686093919819422", 
                alpha: "83664630819351590737480114674756289527020672925159190196735121035974365763737930814211489384727919929162889359757344094558620603031939739838930512003375827325972290454843601597056700626062782690320697016139861199568505466897067115385403188328972468483830555584249877465208407945727957760258046483336140474544544071864449801074626169626413322412282266901529785698787596260094994294377731312590609138088320222285937679480021331242101852374387886896301146985149825707477594528641517954762893518333443816346392199844708860505108902711754515705395059172411869281159529856185321918185106189185287012461600652994729430223636480062760087050790740003949734162093974124419196925565469763570527565745930728682405498064452669585880512866270398246210119491775731072047998525434252111451034462161028453966493444930268025124792486825992690589553997454767", 
                t: {
                  "1": "15462906129657810863793527605727953012848236955729938290955241490300457937417741030430528099229270127892615137354133650592335023176353575899970213007608363031615391981127194448134348313118096763339327337552852539400050944190297496480875123679545450507173362282538652931373265333468709602048972183752268869168995606470302559754484489341730872316022683000939300422199460593441450612777036296649205981684517608572944833990775269801709816844113740550016581001186178682407332671933990638420802293898901009231237952189236981847492490251439193536667851465334831539970345734135656912165499244445306381504512027224496052610315", 
                  "DELTA": "70016302851902395533037286827002678360467439667350350368949609761324330476763311258927909246824227484301520484988452205864787174642725258831408110975189696323440721023098795199820052482319576608819901236594429591187539576606044195752426304663156395603141234190612887270146276101610858588782813528383123528103683744848897932248190837984203538951127376360397660025522834976955717444135459016674636761422915850413024158112447097789886021222643839218096029935065761976520125934823456401905227202566513226047210031954213689083523507449674735566099044934481104430620026266936030147702481621239687293525266551095099241613977", 
                  "2": "100820804751487938499102237183782345428903055804145548907043347035576392960376832845786898728300770813932390302172267431720054681944565593665292421767717064301011903458828942243729381142189871361744748330574581173191674741645678576511595590324568057917796134258466783121162401509170263902330989152084048291016624328712208811990337091474815297959098869346609269899832362073263401233971658289641393014062017336039924991901881304728550424110087448047851686068752654258724976767876906121206663414415746052110105910353694148461932614485842835449930468725712633946403933921017990558264219603070111277884837113346407502371874", 
                  "0": "48215845443910393617644121753067794250639058915880966884031746127330241991741958760657850270298752436558070403945942495183676661100241578792821188569981048784618965544482046103118109786686739156393807318580684986263592048181583118653310701242176410447099586857740726806320416601386681766086403851407960659156640631113674465865481426599405921698113919784735520567051766787930010865532352252924690361285591425054250112846382019545487460835838547704291093961299763747226284674247543799550557752276247806109754692525393020831057568634270050461645721598520025120392539545663523782116008040439487294550418521596634493126784", 
                  "3": "42850217262523919025604532877604751200294515570223841758674225384718385389250188985895823028786891566912709295051431225040728802073001292785534659307355808404254398843505199906402515504611132647946531039939573060934382542336011910392083352595505796112077094174074746360152419971697874525301306101878753158195929656300683504013014329665869862396813677282382232184235384343136876799467772520296211877482850667935515735735876788861096691726559628029237172514753328889229382232444658978323105280739874572969628598326653738633988024440061788900269145438889962071564043549138924518704023778590543380045074514780572830125160"
                }, 
                predicate: { 
                  attr_name: "age", 
                  p_type: "GE", 
                  value: 18 
                } 
              }
            ] 
          }, 
          // non_revoc_proof: None
        }
      ], 
      aggregated_proof: { 
        c_hash: "73668684608588321608017182432267230532910305253410002650655882158468102739976", 
        c_list: [
          [3, 28, 219, 169, 78, 50, 178, 180, 40, 31, 99, 184, 74, 101, 221, 185, 14, 150, 171, 44, 10, 139, 175, 194, 208, 103, 67, 181, 194, 138, 190, 6, 2, 185, 215, 30, 145, 13, 158, 221, 168, 217, 68, 48, 223, 36, 104, 185, 116, 132, 255, 44, 46, 104, 74, 163, 195, 188, 234, 192, 246, 253, 176, 249, 121, 23, 198, 209, 88, 254, 107, 131, 224, 131, 137, 232, 192, 42, 199, 89, 92, 104, 64, 205, 78, 108, 60, 236, 244, 174, 103, 88, 162, 107, 177, 206, 248, 230, 171, 205, 16, 129, 241, 10, 187, 30, 157, 119, 0, 11, 53, 94, 160, 99, 64, 114, 52, 138, 114, 164, 140, 115, 32, 165, 15, 93, 250, 44, 50, 83, 251, 175, 85, 101, 24, 50, 178, 66, 76, 51, 249, 39, 124, 0, 50, 115, 239, 103, 93, 129, 1, 23, 134, 138, 69, 91, 170, 224, 27, 202, 70, 76, 194, 212, 166, 91, 26, 255, 235, 115, 36, 210, 234, 229, 49, 26, 61, 17, 28, 196, 143, 49, 115, 213, 140, 34, 202, 239, 246, 80, 111, 204, 145, 113, 183, 28, 201, 162, 199, 87, 20, 160, 127, 225, 5, 20, 223, 191, 189, 241, 172, 134, 152, 5, 33, 246, 149, 150, 40, 56, 179, 46, 34, 109, 171, 135, 255, 109, 111, 162, 40, 202, 123, 223, 201, 17, 8, 101, 192, 100, 164, 104, 49, 2, 196, 165, 122, 73, 230, 1, 90, 68, 55, 121, 151, 30, 231], 
          [1, 125, 241, 108, 224, 94, 134, 232, 207, 71, 4, 212, 58, 202, 103, 230, 182, 25, 3, 15, 223, 126, 105, 45, 98, 182, 139, 164, 229, 126, 13, 75, 94, 160, 201, 201, 15, 73, 58, 254, 144, 74, 35, 141, 84, 73, 163, 191, 204, 241, 234, 252, 68, 141, 181, 228, 144, 2, 13, 140, 217, 254, 95, 20, 51, 21, 20, 230, 153, 72, 208, 41, 214, 160, 172, 43, 210, 79, 59, 155, 116, 85, 43, 232, 78, 38, 56, 7, 150, 140, 64, 80, 244, 245, 70, 122, 27, 229, 224, 29, 166, 220, 101, 18, 222, 243, 31, 35, 231, 216, 168, 100, 134, 122, 179, 219, 84, 227, 29, 55, 6, 187, 232, 194, 84, 37, 121, 153, 68, 26, 93, 16, 123, 43, 23, 130, 248, 63, 40, 191, 28, 114, 118, 64, 60, 119, 139, 132, 115, 33, 186, 40, 201, 59, 203, 142, 160, 70, 10, 144, 86, 184, 39, 99, 115, 90, 166, 6, 178, 42, 12, 108, 251, 19, 53, 236, 71, 39, 237, 49, 85, 40, 212, 205, 226, 189, 109, 228, 6, 76, 230, 143, 65, 140, 148, 184, 163, 205, 56, 5, 151, 31, 194, 215, 191, 127, 18, 139, 41, 133, 135, 187, 167, 244, 69, 199, 253, 252, 47, 142, 95, 45, 165, 52, 26, 159, 13, 147, 224, 87, 173, 122, 173, 188, 74, 25, 187, 121, 26, 184, 192, 100, 11, 214, 236, 46, 62, 242, 16, 109, 234, 195, 91, 190, 8, 136, 128], 
          [122, 125, 100, 66, 186, 74, 248, 137, 105, 252, 97, 96, 85, 52, 206, 105, 209, 115, 58, 231, 23, 92, 224, 3, 41, 179, 8, 98, 240, 99, 245, 74, 130, 127, 147, 67, 192, 223, 155, 18, 47, 3, 12, 106, 27, 204, 100, 84, 152, 197, 211, 207, 237, 173, 74, 62, 252, 126, 100, 245, 80, 87, 138, 199, 62, 38, 119, 159, 123, 211, 143, 0, 100, 101, 38, 160, 100, 151, 11, 251, 154, 134, 2, 182, 162, 89, 180, 212, 25, 87, 221, 154, 39, 252, 120, 68, 236, 205, 64, 19, 90, 45, 61, 208, 61, 157, 205, 187, 21, 189, 165, 22, 93, 8, 162, 67, 45, 163, 200, 208, 15, 73, 57, 220, 141, 41, 44, 65, 163, 3, 108, 37, 119, 75, 192, 84, 43, 143, 13, 239, 38, 105, 253, 185, 22, 48, 196, 107, 21, 117, 236, 45, 207, 219, 25, 59, 182, 246, 18, 28, 45, 29, 99, 88, 171, 225, 93, 6, 40, 236, 18, 168, 98, 213, 95, 159, 10, 57, 103, 138, 250, 6, 54, 213, 85, 78, 125, 237, 92, 60, 18, 201, 184, 168, 237, 144, 203, 174, 125, 177, 48, 139, 183, 148, 34, 65, 166, 253, 211, 223, 81, 187, 75, 134, 25, 0, 141, 113, 51, 220, 29, 133, 181, 214, 7, 29, 66, 8, 164, 198, 115, 58, 34, 7, 94, 92, 142, 235, 6, 117, 81, 171, 120, 246, 30, 230, 124, 82, 114, 205, 230, 69, 48, 103, 165, 11], 
          [3, 30, 167, 148, 204, 9, 133, 12, 33, 60, 15, 73, 222, 111, 8, 181, 215, 137, 69, 105, 80, 102, 74, 78, 206, 1, 174, 83, 36, 194, 33, 232, 56, 56, 198, 200, 231, 29, 29, 35, 89, 240, 146, 155, 229, 60, 208, 106, 202, 151, 229, 218, 103, 160, 206, 16, 54, 29, 222, 30, 246, 25, 207, 193, 105, 120, 120, 65, 225, 249, 41, 247, 27, 101, 101, 43, 204, 84, 138, 118, 134, 139, 115, 57, 232, 233, 131, 252, 223, 49, 170, 227, 175, 185, 175, 212, 144, 176, 8, 146, 28, 202, 211, 110, 161, 242, 163, 144, 130, 36, 88, 33, 63, 0, 66, 240, 42, 151, 142, 173, 180, 19, 199, 229, 185, 103, 21, 242, 217, 233, 81, 57, 220, 232, 191, 7, 192, 254, 172, 95, 216, 227, 47, 142, 222, 248, 213, 103, 72, 152, 215, 83, 58, 245, 64, 211, 68, 73, 195, 74, 191, 224, 95, 185, 214, 49, 249, 213, 3, 91, 75, 150, 160, 164, 180, 75, 144, 36, 86, 252, 61, 170, 51, 28, 82, 44, 48, 200, 178, 219, 252, 54, 32, 3, 162, 44, 128, 94, 235, 41, 5, 63, 252, 19, 204, 105, 96, 109, 77, 186, 153, 193, 245, 98, 93, 166, 199, 219, 141, 247, 101, 230, 11, 202, 71, 84, 23, 125, 142, 5, 248, 91, 157, 134, 97, 16, 22, 194, 254, 93, 174, 241, 236, 206, 77, 77, 157, 175, 123, 206, 138, 237, 111, 91, 50, 220, 34], 
          [1, 83, 112, 105, 48, 131, 11, 66, 183, 10, 121, 53, 36, 207, 77, 10, 153, 132, 45, 17, 11, 245, 242, 35, 45, 246, 255, 84, 79, 58, 175, 10, 90, 234, 18, 34, 215, 36, 142, 107, 129, 182, 245, 66, 178, 48, 236, 23, 99, 232, 221, 112, 16, 245, 77, 159, 206, 125, 107, 116, 230, 5, 61, 211, 224, 121, 7, 66, 221, 59, 15, 73, 60, 165, 156, 213, 200, 226, 83, 217, 107, 81, 229, 230, 13, 214, 200, 203, 240, 133, 77, 72, 174, 161, 73, 76, 240, 151, 95, 110, 18, 136, 174, 45, 149, 138, 158, 43, 65, 86, 210, 213, 150, 145, 23, 87, 228, 155, 116, 27, 41, 127, 13, 122, 9, 183, 106, 231, 207, 184, 58, 174, 70, 30, 37, 229, 142, 119, 13, 55, 179, 162, 75, 89, 23, 25, 137, 130, 60, 244, 227, 40, 83, 106, 68, 152, 66, 27, 124, 102, 97, 13, 197, 45, 205, 134, 84, 210, 212, 90, 241, 13, 20, 115, 251, 245, 76, 170, 207, 123, 190, 215, 222, 110, 94, 122, 151, 113, 215, 197, 41, 10, 50, 31, 44, 186, 71, 229, 96, 24, 235, 207, 250, 211, 72, 196, 162, 221, 2, 199, 96, 119, 51, 198, 134, 220, 9, 138, 48, 105, 144, 95, 39, 73, 234, 20, 154, 24, 202, 89, 81, 52, 198, 135, 14, 93, 128, 254, 111, 46, 52, 197, 61, 1, 51, 155, 10, 107, 31, 104, 136, 108, 137, 53, 215, 204, 104],
          [2, 42, 162, 205, 244, 253, 48, 252, 200, 40, 202, 18, 195, 120, 240, 241, 218, 225, 175, 65, 202, 169, 145, 46, 211, 241, 239, 25, 123, 112, 203, 67, 33, 204, 212, 33, 41, 48, 32, 246, 60, 211, 7, 220, 191, 41, 192, 124, 10, 98, 224, 167, 148, 33, 33, 234, 150, 3, 96, 28, 250, 239, 46, 94, 202, 13, 135, 229, 69, 14, 140, 13, 110, 118, 144, 50, 195, 63, 140, 166, 184, 44, 123, 158, 202, 127, 107, 103, 109, 197, 164, 249, 121, 117, 153, 179, 156, 16, 248, 130, 153, 196, 17, 255, 177, 224, 224, 111, 176, 202, 28, 13, 169, 135, 19, 126, 79, 155, 152, 20, 34, 95, 223, 26, 135, 103, 248, 31, 130, 251, 113, 249, 239, 198, 28, 170, 162, 244, 204, 249, 215, 133, 211, 161, 7, 65, 34, 1, 101, 218, 26, 14, 198, 113, 120, 136, 193, 65, 126, 171, 28, 50, 158, 109, 150, 37, 44, 219, 192, 137, 128, 0, 12, 146, 142, 200, 249, 130, 79, 184, 183, 168, 197, 103, 208, 192, 89, 71, 72, 192, 36, 185, 227, 38, 180, 133, 244, 108, 61, 135, 49, 195, 174, 172, 126, 102, 117, 121, 186, 196, 106, 91, 184, 62, 221, 129, 35, 153, 233, 2, 164, 48, 147, 51, 37, 22, 123, 34, 2, 178, 190, 34, 203, 254, 35, 137, 158, 82, 3, 60, 161, 144, 65, 191, 186, 150, 41, 47, 89, 194, 135, 119, 247, 196, 201, 74, 153]
        ] 
      }
    }, 
    requested_proof: { 
      revealed_attrs: {
        "attr1_referent": {
          sub_proof_index: 0, 
          raw: "john", 
          encoded: "68231017646261521938414776289104528029572365316885701689085572319872983785594"
        }, 
        revealed_attr_groups: {}, 
        self_attested_attrs: {}, 
        unrevealed_attrs: {}, 
        predicates: {
          "predicate1_referent": { sub_proof_index: 0 }
        } 
      }, 
      identifiers: [
        { 
          schema_id: "did:web:xyz/resource/schema", 
          cred_def_id: "did:web:xyz/resource/cred-def",
          // rev_reg_id: None, 
          // timestamp: None 
        }
      ] 
    },
  };
  

  beforeEach(() => {
    cy.visit('http://localhost:8080')
    cy.window()
      .its('wasm')
      .then(x => wasm = x)
  });

  it('wasm works', () => {
    expect(wasm).not.to.be.undefined;
  });

  it.skip("issuerCreateSchema", () => {
    const result = wasm.issuerCreateSchema();
    expect(result).to.eql(schema);
  })

  it.skip("issuerCreateCredentialOffer", () => {
    const result = wasm.issuerCreateCredentialOffer(schema);
    expect(result).to.be.an("array");

    // expect(result[0]).to.eql(credOffer);
    expect(result[0]).to.have.property("cred_def_id");
    expect(result[0]).to.have.property("key_correctness_proof");
    expect(result[0]).to.have.property("nonce");
    expect(result[0]).to.have.property("schema_id");

    // expect(result[1]).to.eql(credDef);
    expect(result[1]).to.have.property("schemaId");
    expect(result[1]).to.have.property("type");
    expect(result[1]).to.have.property("tag");
    expect(result[1]).to.have.property("value");
    // ISSUE - cred_def.value.r missing
    expect(result[1]).to.have.property("issuerId");
    
    // expect(result[2]).to.eql(credDefPriv);
    expect(result[2]).to.have.property("value");
  });

  it.skip("issuerCreateCredential", () => {
    const result = wasm.issuerCreateCredential(credOffer, credDef, credDefPriv, credRequest);

    expect(result).to.be.an("object");
    expect(result).to.have.property("cred_def_id");
    expect(result).to.have.property("rev_reg");
    expect(result).to.have.property("rev_reg_id");
    expect(result).to.have.property("schema_id");
    expect(result).to.have.property("signature");
    expect(result).to.have.property("signature_correctness_proof");
    expect(result).to.have.property("values");
    expect(result).to.have.property("witness");
  });

  it("proverCreateLinkSecret", () => {
    const result = wasm.proverCreateLinkSecret();
    expect(result).to.be.a("string");
  });

  it("proverCreateCredentialRequest", () => {
    const result = wasm.proverCreateCredentialRequest(
      credOffer, 
      credDef, 
      linkSecret, 
      "link-secret-id"
      // "DXoTtQJNtXtiwWaZAK3rB1"
      // "did:peer:2.Ez6LSms555YhFthn1WV8ciDBpZm86hK9tp83WojJUmxPGk1hZ.Vz6MkmdBjMyB4TS5UbbQw54szm8yvMMf1ftGV2sQVYAxaeWhE.SeyJpZCI6Im5ldy1pZCIsInQiOiJkbSIsInMiOiJodHRwczovL21lZGlhdG9yLnJvb3RzaWQuY2xvdWQiLCJhIjpbImRpZGNvbW0vdjIiXX0"
    );
    
    expect(result).to.be.an("array");
    // expect(result[0]).to.eql(credRequest);
    expect(result[0]).to.have.property("blinded_ms");
    expect(result[0]).to.have.property("blinded_ms_correctness_proof");
    expect(result[0]).to.have.property("cred_def_id");
    expect(result[0]).to.have.property("entropy");
    expect(result[0]).to.have.property("nonce");

    // expect(result[1]).to.eql(credRequestMeta);
    expect(result[1]).to.have.property("link_secret_blinding_data");
    expect(result[1]).to.have.property("link_secret_name");
    expect(result[1]).to.have.property("nonce");
  });
  
  it("proverProcessCredential", () => {
    const result = wasm.proverProcessCredential(
      schema,
      credDef,
      credential,
      credRequestMeta,
      linkSecret
    );

    console.log({ credential, result });

    expect(result).not.to.be.null;
  });

  it("proverCreatePresentation", () => {
    // const nonce = wasm.verifierGenerateNonce();
    const nonce = "742809673342769044929402";
    const presRequest = {
      "nonce": nonce,
      "name":"example_presentation_request",
      "version":"0.1",
      "requested_attributes":{
          "attr1_referent":{
              "name":"name",
              "restrictions": {
                  "cred_def_id": "did:web:xyz/resource/cred-def"
              }
          },
      },
      "requested_predicates":{
          "predicate1_referent":{"name":"age","p_type":">=","p_value":18}
      }
    };

    const result = wasm.proverCreatePresentation(
      presRequest,
      schema,
      credDef,
      credential,
      linkSecret
    );

    expect(result).to.be.an("object");
  })

  it.skip("verifierVerifyPresentation", () => {
    const result = wasm.verifierVerifyPresentation(presentation, schema, credDef);
  })

  it.skip("flow", () => {
    const issuer = (() => {
      const schema = wasm.issuerCreateSchema();
      const result = wasm.issuerCreateCredentialOffer(schema);
      const credOffer = result[0];
      const credDef = result[1];
      const credDefPriv = result[2];

      return { schema, credOffer, credDef, credDefPriv };
    })();

    const holder = (() => {
      const linkSecret = wasm.proverCreateLinkSecret();
      const result = wasm.proverCreateCredentialRequest(issuer.credOffer, issuer.credDef, linkSecret);
      const credRequest = result[0];
      const credRequestMeta = result[1];

      return { linkSecret, credRequest, credRequestMeta };
    })();

    const credential = wasm.issuerCreateCredential(
      issuer.credOffer,
      issuer.credDef,
      issuer.credDefPriv,
      holder.credRequest
    );

    const presentation = wasm.proverCreatePresentation(
      issuer.schema,
      issuer.credDef,
      credential,
      holder.credRequestMeta,
      holder.linkSecret
    );

    const verified = wasm.verifierVerifyPresentation(presentation, issuer.schema, issuer.credDef);
    // TODO - something wrong, this should be true...
    expect(verified).to.be.true;
  })

  it.skip("full wasm", () => {
    wasm.exampleFull();
  })
});
